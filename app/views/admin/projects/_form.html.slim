= simple_form_for [:admin, resource], html: { multipart: true } do |form|
  = form.input :title
  = form.input :url

  = form.input :description, as: :text
  = form.input :extended_description, as: :text, label: 'What we did'

  = form.input :quote
  = form.input :client_name

  = form.input :category, collection: @categories, label_method: :name, value_method: :id, label: 'Category', default: 'Client Work'

  = form.input :promoted
  = form.input :published
  = form.input :rubygem, label: 'Gem name'

  - if !resource.screenshots.empty?
    ul#screenshots
      = form.simple_fields_for :screenshots, resource.screenshots.select {|screenshot| screenshot.persisted?}, html: { multipart: true } do |screenshot|
        li.screenshot
          = image_tag(screenshot.object.file.thumb.url)
          .destroy
            = screenshot.check_box :_destroy
            = screenshot.label :_destroy, "Delete screenshot"

  = form.simple_fields_for :screenshots, form.object.class.reflect_on_association(:screenshots).klass.new, child_index: (resource.screenshots.length + 1).to_s, html: { multipart: true } do |builder|
    = builder.input :file, as: :file, label: 'Project screenshot', required: resource.screenshots.empty?

  = form.submit

javascript:

  $(function() {
    $('#project_rubygem').parent().hide();
    $('#project_category').change(function() {
      if (this.value === 'open-source') {
        $('#project_rubygem').parent().show();
      } else {
        $('#project_rubygem').parent().hide();
      }
    });
  });
